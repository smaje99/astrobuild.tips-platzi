---
import { formatDate } from '@/utils/date';

interface Props {
  readonly content: {
    readonly title: string;
    readonly pubDate: string;
    readonly image?: string;
    readonly tags: string[];
  };
}

const {
  content: { title, pubDate, image = null, tags },
} = Astro.props;

const pubDateFormatted = formatDate(pubDate);
---

<!doctype html>
<html lang='es'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class='bg-slate-900 text-slate-400'>
    <section>
      <div class='mx-auto max-w-screen-xl px-4 py-16 sm:px-6 sm:py-24 lg:px-8'>
        <div class='max-w-3xl'>
          <h2 class='text-3xl font-bold sm:text-4xl'>
            {title}
          </h2>
          <div
            class='flex flex-col gap-x-1 pt-1 sm:gap-y-2 md:flex-row md:items-center md:gap-y-0 md:divide-x'
          >
            <time datetime={pubDateFormatted} class='pr-2'>
              {pubDateFormatted}
            </time>
            {
              tags.map((tag) => (
                <small class='whitespace-nowrap rounded-full bg-purple-100 px-2.5 py-0.5 text-xs text-purple-600'>
                  {tag}
                </small>
              ))
            }
          </div>
        </div>

        <div class='mt-8 grid grid-cols-1 gap-8 lg:grid-cols-2 lg:gap-16'>
          <div class='relative h-64 overflow-hidden sm:h-80 lg:h-full'>
            {
              image ? (
                <img
                  alt={title}
                  src={image}
                  class='absolute inset-0 h-full w-full object-cover'
                />
              ) : null
            }
          </div>

          <div class='lg:py-16'>
            <article class='space-y-4 text-gray-600'>
              <slot />
            </article>
          </div>
        </div>
      </div>
    </section>
  </body>
</html>
